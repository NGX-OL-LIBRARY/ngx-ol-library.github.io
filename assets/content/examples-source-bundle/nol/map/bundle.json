[{"path":"accessible-map/accessible-map.component.ts","content":"import { Component, ViewEncapsulation } from \"@angular/core\";\nimport { NolMapComponent } from \"ngx-ol-library/map\";\n\n@Component({\n  selector: 'nol-accessible-map-example',\n  template: `\n    <nol-map #map [targetAttributes]=\"{ tabindex: 0 }\" height=\"400px\">\n      <nol-view [center]=\"[0, 0]\" [zoom]=\"2\"></nol-view>\n      <nol-tile-layer>\n        <nol-osm-source></nol-osm-source>\n      </nol-tile-layer>\n      <div class=\"actions\">\n        <button type=\"button\" (click)=\"zoomOut(map)\">Zoom out</button>\n        <button type=\"button\" (click)=\"zoomIn(map)\">Zoom in</button>\n      </div>\n    </nol-map>\n  `,\n  styles: [`\n    nol-map > div[tabindex=\"0\"]:focus {\n      outline: #4A74A8 solid 0.15em;\n    }\n\n    div.actions {\n      margin-top: 16px;\n    }\n\n    div.actions > button {\n      padding: 8px 16px;\n      margin-right: 8px;\n      cursor: pointer;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NolAccessibleMapExampleComponent {\n\n  zoomOut(map: NolMapComponent): void {\n    const view = map.instance.getView();\n    const zoom = view.getZoom()!;\n    view.setZoom(zoom - 1);\n  }\n\n  zoomIn(map: NolMapComponent): void {\n    const view = map.instance.getView();\n    const zoom = view.getZoom()!;\n    view.setZoom(zoom + 1);\n  }\n}"},{"path":"simple-map/simple-map.component.ts","content":"import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: 'nol-simple-map-example',\n  template: `\n    <nol-map height=\"400px\">\n      <nol-view [center]=\"[0, 0]\" [zoom]=\"2\"></nol-view>\n      <nol-tile-layer>\n        <nol-osm-source></nol-osm-source>\n      </nol-tile-layer>\n    </nol-map>\n  `,\n})\nexport class NolSimpleMapExampleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}"},{"path":"map-export/map-export.component.ts","content":"import { Component, OnInit } from \"@angular/core\";\nimport { NolMapComponent } from \"ngx-ol-library/map\";\n\n@Component({\n  selector: 'nol-map-export-example',\n  template: `\n    <button type=\"button\" (click)=\"download(map)\">Download PNG</button>\n    <nol-map #map height=\"400px\">\n      <nol-view [center]=\"[0, 0]\" [zoom]=\"2\"></nol-view>\n      <nol-tile-layer>\n        <nol-osm-source></nol-osm-source>\n      </nol-tile-layer>\n    </nol-map>\n  `,\n})\nexport class NolMapExportExample implements OnInit {\n\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  download(map: NolMapComponent): void {\n    map.instance.once('rendercomplete', () => {\n      const canvasList = map.instance.getViewport().querySelectorAll<HTMLCanvasElement>('.ol-layer canvas, canvas.ol-layer');\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d')!;\n      const [width, height] = map.instance.getSize()!;\n      canvas.width = width;\n      canvas.height = height;\n  \n      canvasList.forEach(canvasElement => {\n        if (canvasElement.width > 0) {\n          const opacity = canvasElement.parentElement?.style.opacity || canvasElement.style.opacity;\n          ctx.globalAlpha = opacity === '' ? 1 : Number(opacity);\n          let matrix: any;\n          const transform = canvasElement.style.transform;\n          if (transform) {\n            // Get the transform parameters from the style's transform matrix\n            matrix = transform\n              .match(/^matrix\\(([^\\(]*)\\)$/)![1]\n              .split(',')\n              .map(Number);\n          } else {\n            matrix = [\n              parseFloat(canvasElement.style.width) / canvasElement.width,\n              0,\n              0,\n              parseFloat(canvasElement.style.height) / canvasElement.height,\n              0,\n              0,\n            ];\n          }\n          // Apply the transform to the export map context\n          ctx.setTransform(matrix);\n          const backgroundColor = canvasElement.parentElement?.style.backgroundColor;\n          if (backgroundColor) {\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n          }\n          ctx.drawImage(canvasElement, 0, 0);\n        }\n      });\n  \n      ctx.globalAlpha = 1;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n  \n      const link = document.createElement('a');\n      document.body.appendChild(link);\n      link.href = canvas.toDataURL();\n      link.download = 'map_export.png';\n      link.click();\n      link.remove();\n    });\n    map.instance.renderSync();\n  }\n}"},{"path":"examples.module.ts","content":"import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NolViewModule } from 'ngx-ol-library/view';\nimport { NolMapModule } from 'ngx-ol-library/map';\nimport { NolTileLayerModule } from 'ngx-ol-library/layers/tile-layer';\nimport { NolOSMSourceModule } from 'ngx-ol-library/sources/osm-source';\n\nimport { NolAccessibleMapExampleComponent } from './accessible-map/accessible-map.component';\nimport { NolMapExportExample } from './map-export/map-export.component';\nimport { NolSimpleMapExampleComponent } from './simple-map/simple-map.component';\n\n@NgModule({\n  declarations: [\n    NolAccessibleMapExampleComponent,\n    NolMapExportExample,\n    NolSimpleMapExampleComponent\n  ],\n  imports: [\n    CommonModule,\n    NolMapModule, \n    NolViewModule, \n    NolTileLayerModule, \n    NolOSMSourceModule\n  ],\n})\nexport class NolMapExampleModule {}"}]