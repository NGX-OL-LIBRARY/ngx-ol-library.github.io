[{"type":"component","name":"nol-attribution-control","properties":[{"name":"[className]","type":"string","default":"ol-attribution","description":"<p>CSS class name.</p>\n"},{"name":"[target]","type":"HTMLElement | string","description":"<p>Specify a target if you want the control to be rendered outside of the map&#39;s viewport.</p>\n"},{"name":"[collapsible]","type":"boolean","description":"<p>Specify if attributions can be collapsed. If not specified, sources control this behavior with their <code>attributionsCollapsible</code> setting.</p>\n"},{"name":"[collapsed]","type":"boolean","description":"<p>Specify if attributions should be collapsed at startup.</p>\n"},{"name":"[tipLabel]","type":"string","default":"Attributions","description":"<p>Text label to use for the button tip.</p>\n"},{"name":"[label]","type":"string | HTMLElement","default":"i","description":"<p>Text label to use for the collapsed attributions button. Instead of text, also an element (e.g. a <code>span</code> element) can be used.</p>\n"},{"name":"[expandClassName]","type":"string","default":"ol-attribution-expand","description":"<p>CSS class name for the collapsed attributions button.</p>\n"},{"name":"[collapseLabel]","type":"string | HTMLElement","default":"â€º","description":"<p>Text label to use for the expanded attributions button. Instead of text, also an element (e.g. a <code>span</code> element) can be used.</p>\n"},{"name":"[collapseClassName]","type":"string","default":"ol-attribution-collapse","description":"<p>CSS class name for the expanded attributions button.</p>\n"},{"name":"[render]","type":"(event: MapEvent) => void","description":"<p>Function called when the control should be re-rendered. This is called in a <code>requestAnimationFrame</code> callback.</p>\n"},{"name":"(onChange)","type":"EventEmitter<BaseEvent>","description":"<p>Generic change event. Triggered when the revision counter is increased.</p>\n"},{"name":"(onError)","type":"EventEmitter<BaseEvent>","description":"<p>Generic error event. Triggered when an error occurs.</p>\n"},{"name":"(onPropertychange)","type":"EventEmitter<ObjectEvent>","description":"<p>Triggered when a property is changed.</p>\n"}],"description":""}]