[{"type":"component","name":"nol-map","properties":[{"name":"[controls]","type":"\tCollection<Control> | Array<Control>","description":"<p>Controls initially added to the map. If not specified, <a target=\"_blank\" href=\"https://openlayers.org/en/latest/apidoc/module-ol_control_defaults.html#.defaults\">defaults</a> is used.</p>\n"},{"name":"[pixelRatio]","type":"number","default":"window.devicePixelRatio","description":"<p>The ratio between physical pixels and device-independent pixels (dips) on the device.</p>\n"},{"name":"[interactions]","type":"Collection<Interaction> | Array<Interaction>","description":"<p>Interactions that are initially added to the map. If not specified, <a target=\"_blank\" href=\"https://openlayers.org/en/latest/apidoc/module-ol_interaction_defaults.html#.defaults\">defaults</a> is used.</p>\n"},{"name":"[keyboardEventTarget]","type":"HTMLElement | Document | string","description":"<p>The element to listen to keyboard events on. This determines when the <code>KeyboardPan</code> and <code>KeyboardZoom</code> interactions trigger. For example, if this option is set to <code>document</code> the keyboard interactions will always trigger. If this option is not specified, the element the library listens to keyboard events on is the map target (i.e. the user-provided div for the map). If this is not <code>document</code>, the target element needs to be focused for key events to be emitted, requiring that the target element has a <code>tabindex</code> attribute.</p>\n"},{"name":"[layers]","type":"Array<BaseLayer> | Collection<BaseLayer> | LayerGroup","description":"<p>Layers. If this is not defined, a map with no layers will be rendered. Note that layers are rendered in the order supplied, so if you want, for example, a vector layer to appear on top of a tile layer, it must come after the tile layer.</p>\n"},{"name":"[maxTilesLoading]","type":"number","default":16,"description":"<p>Maximum number tiles to load simultaneously.</p>\n"},{"name":"[moveTolerance]","type":"number","default":1,"description":"<p>The minimum distance in pixels the cursor must move to be detected as a map move event instead of a click. Increasing this value can make it easier to click on the map.</p>\n"},{"name":"[overlays]","type":"Collection<Overlay> | Array<Overlay>","description":"<p>Overlays initially added to the map. By default, no overlays are added.</p>\n"},{"name":"[target]","type":"HTMLElement | string","description":"<p>The container for the map, either the element itself or the id of the element. If not specified at construction time, <a target=\"_blank\" href=\"https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html#setTarget\">setTarget</a> must be called for the map to be rendered. If passed by element, the container can be in a secondary document.</p>\n"},{"name":"[view]","type":"View | Promise<ViewOptions>","description":"<p>The map&#39;s view. No layer sources will be fetched unless this is specified at construction time or through <a target=\"_blank\" href=\"https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html#setView\">setView</a>.</p>\n"},{"name":"(onChange)","type":"EventEmitter<BaseEvent>","description":"<p>Generic change event. Triggered when the revision counter is increased.</p>\n"},{"name":"(onLayerGroupChange)","type":"EventEmitter<ObjectEvent>","description":"<p>Triggered when layer group changed.</p>\n"},{"name":"(onSizeChange)","type":"EventEmitter<ObjectEvent>","description":"<p>Triggered when map size changed.</p>\n"},{"name":"(onTargetChange)","type":"EventEmitter<ObjectEvent>","description":"<p>Triggered when map target element changed.</p>\n"},{"name":"(onViewChange)","type":"EventEmitter<ObjectEvent>","description":"<p>Triggered when map view changed.</p>\n"},{"name":"(onClick)","type":"EventEmitter<MapBrowserEvent>","description":"<p>A click with no dragging. A double click will fire two of this.</p>\n"},{"name":"(onDblclick)","type":"EventEmitter<MapBrowserEvent>","description":"<p>A true double click, with no dragging.</p>\n"},{"name":"(onError)","type":"EventEmitter<BaseEvent>","description":"<p>Generic error event. Triggered when an error occurs.</p>\n"},{"name":"(onLoadend)","type":"EventEmitter<MapEvent>","description":"<p>Triggered when loading of additional map data has completed.</p>\n"},{"name":"(onLoadstart)","type":"EventEmitter<MapEvent>","description":"<p>Triggered when loading of additional map data (tiles, images, features) starts.</p>\n"},{"name":"(onMoveend)","type":"EventEmitter<MapEvent>","description":"<p>Triggered after the map is moved.</p>\n"},{"name":"(onMovestart)","type":"EventEmitter<MapEvent>","description":"<p>Triggered when the map starts moving.</p>\n"},{"name":"(onPointerdrag)","type":"EventEmitter<MapBrowserEvent>","description":"<p>Triggered when a pointer is dragged.</p>\n"},{"name":"(onPointermove)","type":"EventEmitter<MapBrowserEvent>","description":"<p>Triggered when a pointer is moved. Note that on touch devices this is triggered when the map is panned, so is not the same as mousemove.</p>\n"},{"name":"(onPostcompose)","type":"EventEmitter<RenderEvent>","description":"<p>Triggered after layers are composed. When dispatched by the map, the event object will not have a context set. When dispatched by a layer, the event object will have a context set. Only WebGL layers currently dispatch this event.</p>\n"},{"name":"(onPostrender)","type":"EventEmitter<MapEvent>","description":"<p>Triggered after a map frame is rendered.</p>\n"},{"name":"(onPrecompose)","type":"EventEmitter<RenderEvent>","description":"<p>Triggered before layers are composed. When dispatched by the map, the event object will not have a context set. When dispatched by a layer, the event object will have a context set. Only WebGL layers currently dispatch this event.</p>\n"},{"name":"(onPropertychange)","type":"EventEmitter<ObjectEvent>","description":"<p>Triggered when a property is changed.</p>\n"},{"name":"(onRendercomplete)","type":"EventEmitter<RenderEvent>","description":"<p>Triggered when rendering is complete, i.e. all sources and tiles have finished loading for the current viewport, and all tiles are faded in. The event object will not have a context set.</p>\n"},{"name":"(onSingleclick)","type":"EventEmitter<MapBrowserEvent>","description":"<p>A true single click with no dragging and no double click. Note that this event is delayed by 250 ms to ensure that it is not a double click.</p>\n"}],"description":""}]